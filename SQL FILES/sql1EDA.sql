


-- Retrieve all columns of a customer table 
SELECT 
    COLUMN_NAME, 
    DATA_TYPE, 
    IS_NULLABLE, 
    CHARACTER_MAXIMUM_LENGTH
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'customers';
-- Retrieve all columns of a product table 
SELECT 
    COLUMN_NAME, 
    DATA_TYPE, 
    IS_NULLABLE, 
    CHARACTER_MAXIMUM_LENGTH
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'products';
-- Retrieve all columns of a sales table 
SELECT 
    COLUMN_NAME, 
    DATA_TYPE, 
    IS_NULLABLE, 
    CHARACTER_MAXIMUM_LENGTH
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'sales';


-- Determine the first and last order date and the total duration in months
SELECT 
    MIN(order_date)  AS first_order_date ,
    MAX(order_date)  AS last_order_date,
    ROUND(DATEDIFF(MAX(order_date), MIN(order_date))/30) AS order_range_months
FROM sales;

-- Find the youngest and oldest customer based on birthdate
SELECT
    MIN(birthdate) AS oldest_birthdate,
    ROUND(DATEDIFF(CURDATE(),MIN(birthdate))/365) AS oldest_age,
    MAX(birthdate) AS youngest_birthdate,
     ROUND(DATEDIFF(CURDATE(),MAX(birthdate))/365) AS youngest_age
FROM customers;


-- Find the Total Sales
-- Find how many items are sold
-- Find the average selling price
-- Find the Total number of Orders
-- Find the total number of products
-- Find the total number of customers
-- Find the total number of customers that has placed an order
-- Generate a Report that shows all key metrics of the business
create view  all_measures as
SELECT 'Total Sales' AS measure_name, SUM(sales_amount) AS measure_value FROM sales
UNION ALL
SELECT 'Total Quantity', SUM(quantity) FROM sales
UNION ALL
SELECT 'Average Price', concat('$',(ROUND(AVG(price),2))) FROM sales
UNION ALL
SELECT 'Total Orders', ROUND(COUNT(DISTINCT order_number)) FROM sales
UNION ALL
SELECT 'Total Products', ROUND(COUNT(DISTINCT product_name)) FROM products
UNION ALL
SELECT 'Total Customers', ROUND(COUNT(customer_key)) FROM customers;




-- Find total customers by countries
create view customer_countries as 
SELECT
    country,
    COUNT(customer_key) AS total_customers
FROM customers
GROUP BY country
ORDER BY total_customers DESC;

-- Find total customers by gender
create view customer_gender as 
SELECT
    gender,
    COUNT(customer_key) AS total_customers
FROM customers
GROUP BY gender
ORDER BY total_customers DESC;

-- What is the total revenue generated for each category?
create view revenue_category as
SELECT
    p.category,
    SUM(f.sales_amount) AS total_revenue
FROM sales f
LEFT JOIN products p
    ON p.product_key = f.product_key
GROUP BY p.category
ORDER BY total_revenue DESC;


-- What is the total revenue generated by each customer?

create view revenue_customers as 
SELECT
    c.customer_key,
    concat(c.first_name,' ',c.last_name) as full_name,
    SUM(f.sales_amount) AS total_revenue
FROM sales f
LEFT JOIN customers c
    ON c.customer_key = f.customer_key
GROUP BY 
    c.customer_key,
    full_name

ORDER BY total_revenue DESC;

-- What is the distribution of sold items across countries?
drop view  distribution_countries ;
create view distribution_countries as 
SELECT
    c.country,
    count(f.quantity) AS total_sold_items
    
FROM sales f
LEFT JOIN customers c
    ON c.customer_key = f.customer_key
GROUP BY c.country

ORDER BY total_sold_items DESC;

